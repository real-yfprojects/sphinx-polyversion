[build-system]
requires      = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "sphinx_polyversion"
version = "1.0.0"
description = "Build multiple versions of your sphinx docs and merge them into one website."
readme = "README.md"
authors = ["yfprojects <real-yfprojects@users.noreply.github.com>"]
license = "MIT"
repository = "https://github.com/real-yfprojects/sphinx-polyversion"
documentation = "https://real-yfprojects.github.io/sphinx-polyversion/"
keywords = ["utils", "documentation", "sphinx"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Typing :: Typed",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Documentation",
    "Topic :: Utilities",
]


[tool.poetry.dependencies]
python     = ">=3.8"
virtualenv = { version = ">=20", optional = true }
jinja2     = { version = ">=3", optional = true }

[tool.poetry.extras]
virtualenv = ["virtualenv"]
jinja      = ["jinja2"]

[tool.poetry.scripts]
sphinx-polyversion = "sphinx_polyversion.main:main"

[tool.poetry.group.lint.dependencies]
mypy  = "^1.7.1"
ruff  = "^0.1.6"
black = "^23.11.0"

[tool.poetry.group.test.dependencies]
pytest         = "^7.4.4"
pytest-asyncio = "^0.21.1"
pytest-cov     = "^4.1.0"
pytest-xdist   = "^3.6.1"


[tool.poetry.group.docs.dependencies]
sphinx                           = { version = "^7.3.7", python = ">=3.9" }
sphinx-argparse                  = { version = "^0.3.2", python = ">=3.9" }
sphinx-rtd-theme-github-versions = { version = "^1.1", python = ">=3.9" }
sphinx-rtd-theme                 = { version = "^2.0.0", python = ">=3.9" }
myst-parser                      = { version = "^3.0.1", python = ">=3.9" }
sphinx-notfound-page             = { version = "^1.0.2", python = ">=3.9" }
sphinx-copybutton                = { version = "^0.5.2", python = ">=3.9" }
furo                             = { version = "^2024.5.6", python = ">=3.9" }
sphinxext-opengraph              = { version = "^0.8.2", python = ">=3.9" }
sphinx-autobuild                 = { version = "^2024.4.16", python = ">=3.9" }
sphinx-design                    = { version = "^0.6", python = ">=3.9" }
jinja2                           = { version = "^3.1.4", python = ">=3.9" }


[tool.black]
target-version = ['py38']

[tool.mypy]
files              = "sphinx_polyversion/**.py"
python_version     = "3.8"
strict             = true
allow_redefinition = true
exclude            = ["^(tests|docs)"]

[[tool.mypy.overrides]]
module                 = "virtualenv.*"
ignore_missing_imports = true

[tool.ruff]
target-version = "py38"

select = [
    "T",     # flake8-print
    "I",     # isort
    "F",     # pyflakes
    "D",     # pydocstyle
    "E",     # pycodestyle
    "W",
    "FLY",   # flynt
    "RUF",   # ruff
    "PL",    # pylint
    "TCH",   # flake8-type-checking
    "ASYNC", # flake8-async
    "A",     # flake8-builtins
    "C",     # flake8-comprehensions
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "G",     # flake8-implicit-str-concat
    "INP",   # flake8-no-pep420
    "PT",    # flake8-pytest-style
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "PTH",   # flake8-use-pathlib
    "TD",    # flake8-todos
    "PYI",   # flake8-pyi - lints .pyi type stubs
    "ERA",   # ERA
]
unfixable = ['ERA']

ignore = [
    # pydocstyle
    # "D202", # no-blank-line-after-function
    "D203", # one-blank-line-before-class
    # "D205", # blank-line-after-summary
    "D212", # multi-line-summary-first-line
    # "D401", # non-imperative-mood
    # pycodestyle
    "E501", # line-too-long
    # pylint
    "PLR0913", # too-many-arguments
    # "PLR0912", # too-many-branches
    # "PLR0915", # too-many-statements
    # flake8-todos
    "TD002", # missing author
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed or of form `dummyN`.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?)|dummy\\d*)$"

# Less strict rules for docs/* and tests/*.
[tool.ruff.per-file-ignores]
"docs/*"  = ["PLR", "D1", "PTH", "INP"]
"tests/*" = ["PLR2004"]

[tool.ruff.pylint]
# Allow more arguments for complexity check
max-args = 8

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    # "--cov=sphinx_polyversion",
    # "--cov-report=lcov",
    # "--cov-report=term-missing",
    # "--numprocesses=auto",
]
testpaths = ["tests"]
